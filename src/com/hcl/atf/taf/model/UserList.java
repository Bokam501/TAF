package com.hcl.atf.taf.model;

// Generated Feb 4, 2014 4:30:16 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Comparator;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

/**
 * UserList generated by hbm2java
 */
@Entity
@Table(name = "user_list")
public class UserList implements java.io.Serializable {

	private Integer userId;
	private UserTypeMasterNew userTypeMasterNew;
	private CommonActiveStatusMaster commonActiveStatusMaster;
	private String userPassword;
	private String userDisplayName;
	private Set<TestRunConfigurationParent> testRunConfigurationParents = new HashSet<TestRunConfigurationParent>(0);
	private UserRoleMaster userRoleMaster;
	private Integer status;
	private String firstName;
	private String lastName;
	private String middleName;
	private String userCode;
	private String loginId;
	private String emailId;
	private String contactNumber;
	private AuthenticationType authenticationType;
	private AuthenticationMode authenticationMode;
	private Set<ProductUserRole> productUserRoleSet=new HashSet<ProductUserRole>(0);
	private TestfactoryResourcePool resourcePool;
	private VendorMaster vendor;
	
	@Transient
	private Date resourceFromDate;
	@Transient
	private Date resourceToDate;
	
	private String userStatus;
	private String imageURI;
	private Set<ResourceShiftCheckIn> resourceShiftCheckInSet;
	
	private Set<UserSkills> userSkills = new HashSet<UserSkills>(0);
	
	private Languages languages;
	
	private Set<Customer> customer = new HashSet<Customer>(0);
		
	@Column (name="status")
	public Integer getStatus() {
		return status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	public UserList() {
	}

			public UserList(CommonActiveStatusMaster commonActiveStatusMaster, String firstName,String lastName,String loginId,String userCode,
			String emailId, String contactNumber, String userPassword, String userDisplayName,UserRoleMaster userRoleMaster, Languages languages) {
		this.commonActiveStatusMaster = commonActiveStatusMaster;
		this.firstName = firstName;
		this.lastName = lastName;
		this.loginId = loginId;
		this.userCode = userCode;
		this.emailId = emailId;
		this.contactNumber = contactNumber;
		this.userPassword = userPassword;
		this.userDisplayName = userDisplayName;
		this.userRoleMaster=userRoleMaster;
		this.languages = languages;
	}

		public UserList(
			CommonActiveStatusMaster commonActiveStatusMaster, String firstName,String lastName,String loginId,String userCode,
			String emailId, String contactNumber, String userPassword, String userDisplayName,
			Set<TestRunConfigurationParent> testRunConfigurationParents,UserRoleMaster userRoleMaster, Languages languages) {
		this.commonActiveStatusMaster = commonActiveStatusMaster;
		this.firstName = firstName;
		this.lastName = lastName;
		this.loginId = loginId;
		this.userCode = userCode;
		this.emailId = emailId;
		this.contactNumber = contactNumber;
		this.userPassword = userPassword;
		this.userDisplayName = userDisplayName;
		this.testRunConfigurationParents = testRunConfigurationParents;
		this.userRoleMaster=userRoleMaster;
		this.languages = languages;
	}

		public UserList(UserList userList){
			this.userId = userList.getUserId();
			this.userTypeMasterNew = userList.getUserTypeMasterNew();
			this.commonActiveStatusMaster = userList.getCommonActiveStatusMaster();
			this.userPassword = userList.getUserPassword();
			this.userDisplayName = userList.getUserDisplayName();
			this.testRunConfigurationParents = userList.getTestRunConfigurationParents();
			this.userRoleMaster = userList.getUserRoleMaster();
			this.status = userList.getStatus();
			this.firstName = userList.getFirstName();
			this.lastName = userList.getLastName();
			this.middleName = userList.getMiddleName();
			this.userCode = userList.getUserCode();
			this.loginId = userList.getLoginId();
			this.emailId = userList.getEmailId();
			this.contactNumber = userList.getContactNumber();
			this.authenticationType = userList.getAuthenticationType();
			this.authenticationMode = userList.getAuthenticationMode();
			this.productUserRoleSet= userList.getProductUserRoleSet();
			this.resourcePool = userList.getResourcePool();
			this.vendor = userList.getVendor();
			this.resourceFromDate = userList.getResourceFromDate();
			this.resourceToDate = userList.getResourceToDate();
			this.imageURI = userList.getImageURI();
			this.resourceShiftCheckInSet = userList.getResourceShiftCheckInSet();
			this.userSkills = userList.getUserSkills();
			this.languages = userList.getLanguages();
			this.customer = userList.getCustomer();
		}
		
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "userId", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userStatus")
	@NotFound(action=NotFoundAction.IGNORE)
	public CommonActiveStatusMaster getCommonActiveStatusMaster() {
		return this.commonActiveStatusMaster;
	}

	public void setCommonActiveStatusMaster(
			CommonActiveStatusMaster commonActiveStatusMaster) {
		this.commonActiveStatusMaster = commonActiveStatusMaster;
	}

	@Column(name = "userPassword", nullable = false, length = 45)
	public String getUserPassword() {
		return this.userPassword;
	}

	public void setUserPassword(String userPassword) {
		this.userPassword = userPassword;
	}

	@Column(name = "userDisplayName", nullable = false, length = 45)
	public String getUserDisplayName() {
		return this.userDisplayName;
	}

	public void setUserDisplayName(String userDisplayName) {
		this.userDisplayName = userDisplayName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userList")
	public Set<TestRunConfigurationParent> getTestRunConfigurationParents() {
		return this.testRunConfigurationParents;
	}

	public void setTestRunConfigurationParents(
			Set<TestRunConfigurationParent> testRunConfigurationParents) {
		this.testRunConfigurationParents = testRunConfigurationParents;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userRoleId")
	@NotFound(action=NotFoundAction.IGNORE)
	public UserRoleMaster getUserRoleMaster() {
		return userRoleMaster;
	}

	public void setUserRoleMaster(UserRoleMaster userRoleMaster) {
		this.userRoleMaster = userRoleMaster;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "languageId")
	@NotFound(action=NotFoundAction.IGNORE)
	public Languages getLanguages() {
		return languages;
	}

	public void setLanguages(Languages languages) {
		this.languages = languages;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userTypeId")
	@NotFound(action=NotFoundAction.IGNORE)
	public UserTypeMasterNew getUserTypeMasterNew() {
		return userTypeMasterNew;
	}

	public void setUserTypeMasterNew(UserTypeMasterNew userTypeMasterNew) {
		this.userTypeMasterNew = userTypeMasterNew;
	}

	@Column(name = "firstName")
	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "lastName")
	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getMiddleName() {
		return middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "userCode")
	public String getUserCode() {
		return userCode;
	}

	public void setUserCode(String userCode) {
		this.userCode = userCode;
	}

	@Column(name = "loginId")
	public String getLoginId() {
		return loginId;
	}

	public void setLoginId(String loginId) {
		this.loginId = loginId;
	}

	@Column(name = "emailId")
	public String getEmailId() {
		return emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "contactNumber")
	public String getContactNumber() {
		return contactNumber;
	}

	public void setContactNumber(String contactNumber) {
		this.contactNumber = contactNumber;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "resourcePoolId") 
	public TestfactoryResourcePool getResourcePool() {
		return resourcePool;
	}

	public void setResourcePool(TestfactoryResourcePool resourcePool) {
		this.resourcePool = resourcePool;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "vendorId")
	public VendorMaster getVendor() {
		return vendor;
	}

	public void setVendor(VendorMaster vendor) {
		this.vendor = vendor;
	}

	
	@Override
	public boolean equals(Object o) {
		UserList userList = (UserList) o;
		if (this.userId == userList.getUserId()) {
			return true;
		}else{
			return false;
		}
	}
	
	
	@Override
	public int hashCode(){
	    return (int) userId;
	  }
	
	/*Comparator for sorting the list by User Login Id (string comparision)*/
    public static Comparator<UserList> userListComparator = new Comparator<UserList>() {

	public int compare(UserList user1, UserList user2) {
	   String user1LoginId = user1.getLoginId().toUpperCase();
	   String user2LoginId = user2.getLoginId().toUpperCase();

	   return user1LoginId.compareTo(user2LoginId);
    }};
    
    @Override
    public String toString() {
        return "[ loginId=" + loginId + ", name=" + firstName + "]";
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<UserSkills> getUserSkills() {
		return userSkills;
	}

	public void setUserSkills(Set<UserSkills> userSkills) {
		this.userSkills = userSkills;
	}

	@Column(name = "imageURI")
	public String getImageURI() {
		return imageURI;
	}

	public void setImageURI(String imageURI) {
		this.imageURI = imageURI;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userList", cascade=CascadeType.ALL)
	public Set<ResourceShiftCheckIn> getResourceShiftCheckInSet() {
		return resourceShiftCheckInSet;
	}

	public void setResourceShiftCheckInSet(
			Set<ResourceShiftCheckIn> resourceShiftCheckInSet) {
		this.resourceShiftCheckInSet = resourceShiftCheckInSet;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user", cascade=CascadeType.ALL)
	public Set<ProductUserRole> getProductUserRoleSet() {
		return productUserRoleSet;
	}

	public void setProductUserRoleSet(Set<ProductUserRole> productUserRoleSet) {
		this.productUserRoleSet = productUserRoleSet;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "customerUser")
	public Set<Customer> getCustomer() {
		return customer;
	}

	public void setCustomer(Set<Customer> customer) {
		this.customer = customer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "authenticationTypeId")
	public AuthenticationType getAuthenticationType() {
		return authenticationType;
	}

	public void setAuthenticationType(AuthenticationType authenticationType) {
		this.authenticationType = authenticationType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "authenticationModeId")
	public AuthenticationMode getAuthenticationMode() {
		return authenticationMode;
	}

	public void setAuthenticationMode(AuthenticationMode authenticationMode) {
		this.authenticationMode = authenticationMode;
	}

	@Transient
	public Date getResourceFromDate() {
		return resourceFromDate;
	}

	public void setResourceFromDate(Date resourceFromDate) {
		this.resourceFromDate = resourceFromDate;
	}
	
	@Transient
	public Date getResourceToDate() {
		return resourceToDate;
	}

	public void setResourceToDate(Date resourceToDate) {
		this.resourceToDate = resourceToDate;
	}

}
