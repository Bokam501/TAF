package com.hcl.atf.taf.model;

// Generated Feb 4, 2014 4:30:16 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TestExecutionResult generated by hbm2java
 */
@Entity
@Table(name = "test_execution_result")
public class TestExecutionResult implements java.io.Serializable {

	private Integer testExecutionResultId;
	private TestRunList testRunList;
	private TestResultStatusMaster testResultStatusMaster;
	private TestCaseList testCaseList;
	private TestCaseStepsList testCaseStepsList;
	private TestSuiteList testSuiteList;
	private String testStep;
	private String testStepDescription;
	private String testStepInput;
	private String testStepExpectedOutput;
	private String testStepObservedOutput;
	private String testCase;
	private String testCaseDescription;
	private String screenShotPath;
	private String screenShotLabel;
	private Date startTime;
	private Date endTime;
	private String failureReason;
	private String executionRemarks;
	private Set<TestExecutionResultBugList> testExecutionResultBugLists = new HashSet<TestExecutionResultBugList>(
			0);


	public TestExecutionResult() {
	}

	public TestExecutionResult(TestRunList testRunList,
			TestResultStatusMaster testResultStatusMaster,
			TestSuiteList testSuiteList, String testStep, String testCase) {
		this.testRunList = testRunList;
		this.testResultStatusMaster = testResultStatusMaster;
		this.testSuiteList = testSuiteList;
		this.testStep = testStep;
		this.testCase = testCase;
	}

	public TestExecutionResult(TestRunList testRunList,
			TestResultStatusMaster testResultStatusMaster,
			TestCaseList testCaseList, TestCaseStepsList testCaseStepsList,
			TestSuiteList testSuiteList, String testStep,
			String testStepDescription, String testStepInput,
			String testStepExpectedOutput, String testStepObservedOutput,
			String testCase, String testCaseDescription, String screenShotPath,
			Date startTime, Date endTime, String failureReason,
			String executionRemarks,String testRunEvidenceStatus,
			Set<TestExecutionResultBugList> testExecutionResultBugLists) {
		this.testRunList = testRunList;
		this.testResultStatusMaster = testResultStatusMaster;
		this.testCaseList = testCaseList;
		this.testCaseStepsList = testCaseStepsList;
		this.testSuiteList = testSuiteList;
		this.testStep = testStep;
		this.testStepDescription = testStepDescription;
		this.testStepInput = testStepInput;
		this.testStepExpectedOutput = testStepExpectedOutput;
		this.testStepObservedOutput = testStepObservedOutput;
		this.testCase = testCase;
		this.testCaseDescription = testCaseDescription;
		this.screenShotPath = screenShotPath;
		this.startTime = startTime;
		this.endTime = endTime;
		this.failureReason = failureReason;
		this.executionRemarks = executionRemarks;
		this.testExecutionResultBugLists = testExecutionResultBugLists;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "testExecutionResultId", unique = true, nullable = false)
	public Integer getTestExecutionResultId() {
		return this.testExecutionResultId;
	}

	public void setTestExecutionResultId(Integer testExecutionResultId) {
		this.testExecutionResultId = testExecutionResultId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "testRunListId", nullable = false)
	public TestRunList getTestRunList() {
		return this.testRunList;
	}

	public void setTestRunList(TestRunList testRunList) {
		this.testRunList = testRunList;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "testResultStatus", nullable = false)
	public TestResultStatusMaster getTestResultStatusMaster() {
		return this.testResultStatusMaster;
	}

	public void setTestResultStatusMaster(
			TestResultStatusMaster testResultStatusMaster) {
		this.testResultStatusMaster = testResultStatusMaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "testCaseId")
	public TestCaseList getTestCaseList() {
		return this.testCaseList;
	}

	public void setTestCaseList(TestCaseList testCaseList) {
		this.testCaseList = testCaseList;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "testStepId")
	public TestCaseStepsList getTestCaseStepsList() {
		return this.testCaseStepsList;
	}

	public void setTestCaseStepsList(TestCaseStepsList testCaseStepsList) {
		this.testCaseStepsList = testCaseStepsList;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "testSuiteId", nullable = false)
	public TestSuiteList getTestSuiteList() {
		return this.testSuiteList;
	}

	public void setTestSuiteList(TestSuiteList testSuiteList) {
		this.testSuiteList = testSuiteList;
	}

	@Column(name = "testStep", nullable = false, length = 100)
	public String getTestStep() {
		return this.testStep;
	}

	public void setTestStep(String testStep) {
		this.testStep = testStep;
	}

	@Column(name = "testStepDescription", length = 200)
	public String getTestStepDescription() {
		return this.testStepDescription;
	}

	public void setTestStepDescription(String testStepDescription) {
		this.testStepDescription = testStepDescription;
	}

	@Column(name = "testStepInput", length = 100)
	public String getTestStepInput() {
		return this.testStepInput;
	}

	public void setTestStepInput(String testStepInput) {
		this.testStepInput = testStepInput;
	}

	@Column(name = "testStepExpectedOutput", length = 100)
	public String getTestStepExpectedOutput() {
		return this.testStepExpectedOutput;
	}

	public void setTestStepExpectedOutput(String testStepExpectedOutput) {
		this.testStepExpectedOutput = testStepExpectedOutput;
	}

	@Column(name = "testStepObservedOutput", length = 100)
	public String getTestStepObservedOutput() {
		return this.testStepObservedOutput;
	}

	public void setTestStepObservedOutput(String testStepObservedOutput) {
		this.testStepObservedOutput = testStepObservedOutput;
	}

	@Column(name = "testCase", nullable = false, length = 100)
	public String getTestCase() {
		return this.testCase;
	}

	public void setTestCase(String testCase) {
		this.testCase = testCase;
	}

	@Column(name = "testCaseDescription", length = 1000)
	public String getTestCaseDescription() {
		return this.testCaseDescription;
	}

	public void setTestCaseDescription(String testCaseDescription) {
		this.testCaseDescription = testCaseDescription;
	}

	@Column(name = "screenShotPath", length = 300)
	public String getScreenShotPath() {
		return this.screenShotPath;
	}

	public void setScreenShotPath(String screenShotPath) {
		this.screenShotPath = screenShotPath;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "startTime", length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "endTime", length = 19)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "failureReason", length = 1000)
	public String getFailureReason() {
		return this.failureReason;
	}

	public void setFailureReason(String failureReason) {
		this.failureReason = failureReason;
	}

	@Column(name = "executionRemarks", length = 45)
	public String getExecutionRemarks() {
		return this.executionRemarks;
	}

	public void setExecutionRemarks(String executionRemarks) {
		this.executionRemarks = executionRemarks;
	}

	@Column(name = "screenShotLabel")
	public String getScreenShotLabel() {
		return screenShotLabel;
	}

	public void setScreenShotLabel(String screenShotLabel) {
		this.screenShotLabel = screenShotLabel;
	}

}
