package com.hcl.atf.taf.model;

// Generated Feb 4, 2014 4:30:16 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ProductVersionListMaster generated by hbm2java
 */
@Entity
@Table(name = "product_version_list_master")
public class ProductVersionListMaster implements java.io.Serializable {

	private Integer productVersionListId;
	private ProductMaster productMaster;
	private String productVersionName;
	private String productVersionDescription;
	private String targetSourceLocation;
	private String targetBinaryLocation;
	private String webAppURL;
	private Integer status;
	private Date releaseDate;
	private Date createdDate;

	private Date statusChangeDate;

	private Set<TestRunConfigurationChild> testRunConfigurationChilds = new HashSet<TestRunConfigurationChild>(0);
	private Set<TestSuiteList> testSuiteLists = new HashSet<TestSuiteList>(0);
	private Set<TestCaseList> testCaseLists = new HashSet<TestCaseList>(0);
	private Set<ProductBuild> productBuild = new HashSet<ProductBuild>(0);
	
	public ProductVersionListMaster() {
	}

	public ProductVersionListMaster(
			DevicePlatformVersionListMaster devicePlatformVersionListMaster,
			ProductMaster productMaster, String productVersionName) {
		this.productMaster = productMaster;
		this.productVersionName = productVersionName;
	}

	public ProductVersionListMaster(
			DevicePlatformVersionListMaster devicePlatformVersionListMaster,
			ProductMaster productMaster, String productVersionName,
			String productVersionDescription, String targetSourceLocation,
			String targetBinaryLocation,
			Set<TestRunConfigurationChild> testRunConfigurationChilds,
			Set<TestSuiteList> testSuiteLists) {
		this.productMaster = productMaster;
		this.productVersionName = productVersionName;
		this.productVersionDescription = productVersionDescription;
		this.targetSourceLocation = targetSourceLocation;
		this.targetBinaryLocation = targetBinaryLocation;
		this.testRunConfigurationChilds = testRunConfigurationChilds;
		this.testSuiteLists = testSuiteLists;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "productVersionListId", unique = true, nullable = false)
	public Integer getProductVersionListId() {
		return this.productVersionListId;
	}

	public void setProductVersionListId(Integer productVersionListId) {
		this.productVersionListId = productVersionListId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "productId", nullable = false)
	public ProductMaster getProductMaster() {
		return this.productMaster;
	}

	public void setProductMaster(ProductMaster productMaster) {
		this.productMaster = productMaster;
	}

	@Column(name = "productVersionName")
	public String getProductVersionName() {
		return this.productVersionName;
	}

	public void setProductVersionName(String productVersionName) {
		this.productVersionName = productVersionName;
	}

	@Column(name = "productVersionDescription")
	public String getProductVersionDescription() {
		return this.productVersionDescription;
	}

	public void setProductVersionDescription(String productVersionDescription) {
		this.productVersionDescription = productVersionDescription;
	}

	@Column(name = "targetSourceLocation")
	public String getTargetSourceLocation() {
		return this.targetSourceLocation;
	}

	public void setTargetSourceLocation(String targetSourceLocation) {
		this.targetSourceLocation = targetSourceLocation;
	}

	@Column(name = "targetLocation")
	public String getTargetBinaryLocation() {
		return this.targetBinaryLocation;
	}

	public void setTargetBinaryLocation(String targetBinaryLocation) {
		this.targetBinaryLocation = targetBinaryLocation;
	}
	
	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "statusChangeDate")
	public Date getStatusChangeDate() {
		return this.statusChangeDate;
	}

	public void setStatusChangeDate(Date statusChangeDate) {
		this.statusChangeDate = statusChangeDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdDate")
	public Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productVersionListMaster")
	public Set<TestRunConfigurationChild> getTestRunConfigurationChilds() {
		return this.testRunConfigurationChilds;
	}

	public void setTestRunConfigurationChilds(
			Set<TestRunConfigurationChild> testRunConfigurationChilds) {
		this.testRunConfigurationChilds = testRunConfigurationChilds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productVersionListMaster")
	public Set<TestSuiteList> getTestSuiteLists() {
		return this.testSuiteLists;
	}

	public void setTestSuiteLists(Set<TestSuiteList> testSuiteLists) {
		this.testSuiteLists = testSuiteLists;
	}
	
	@Column(name = "releaseDate")
	public Date getReleaseDate() {
		return releaseDate;
	}

	public void setReleaseDate(Date releaseDate) {
		this.releaseDate = releaseDate;
	}
	
	@ManyToMany(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinTable(name = "test_case_list_has_product_version_list", joinColumns = { @JoinColumn(name = "productVersionListId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "testCaseId", nullable = false, updatable = false) })
	public Set<TestCaseList> getTestCaseLists() {
		return this.testCaseLists;
	}

	public void setTestCaseLists(Set<TestCaseList> testCaseLists) {
		this.testCaseLists = testCaseLists;
	}
	@Override
	public boolean equals(Object o) {
		ProductVersionListMaster productVersionListMaster = (ProductVersionListMaster) o;
		if (this.productVersionListId == productVersionListMaster.getProductVersionListId()) {
			return true;
		}else{
			return false;
		}
	}
	
	@Override
	public int hashCode(){
	    return (int) productVersionListId;
	  }
	@Column(name = "webAppURL")
	public String getWebAppURL() {
		return webAppURL;
	}

	public void setWebAppURL(String webAppURL) {
		this.webAppURL = webAppURL;
	}
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productVersion")
	public Set<ProductBuild> getProductBuild() {
		return productBuild;
	}

	public void setProductBuild(Set<ProductBuild> productBuild) {
		this.productBuild = productBuild;
	}

	
}
